// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum Role {
  DEVELOPER
  ADMIN
  OPERASIONAL
  ACCOUNTING
  MOC
}

enum AuthType {
  FACE
  CREDENTIAL
}

enum DeviceStatus {
  PENDING
  APPROVED
  DELETED
}

enum SumdanType {
  FRONTING
  CHANNELLING
}

enum StatusPengajuan {
  SIMULASI
  PENDING
  PROCCESS
  APPROVED
  REJECTED
  TRANSFERED
}

enum JenisMargin {
  ANUITAS
  FLAT
}

model Devices {
  id         String       @id @default(uuid())
  deviceId   String       @unique
  deviceName String
  deviceType String
  sistem     String
  browser    String
  status     DeviceStatus @default(PENDING)

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
}

model Users {
  id       String   @id @default(uuid())
  fullname String
  username String   @unique
  password String
  email    String
  address  String   @db.Text
  phone    String
  nik      String   @unique
  nip      String   @unique
  position String
  menu     String?  @db.Text
  face     String?  @db.Text
  image    String?  @db.Text
  status   Boolean  @default(true)
  role     Role     @default(MOC)
  authType AuthType @default(CREDENTIAL)
  coord    String?
  location String?  @db.Text

  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @default(now())
  Unit            Unit?             @relation(fields: [unitId], references: [id])
  unitId          String?
  Sumdan          Sumdan?           @relation(fields: [sumdanId], references: [id])
  sumdanId        String?
  Pengajuan       Pengajuan[]
  DetailPengajuan DetailPengajuan[]
}

model Area {
  id      String  @id @default(uuid())
  name    String
  code    String  @unique
  phone   String? @unique
  email   String? @unique
  address String? @db.Text

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
  Unit      Unit[]
}

model Unit {
  id      String  @id @default(uuid())
  name    String
  code    String  @unique
  phone   String? @unique
  email   String? @unique
  address String? @db.Text

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
  Area      Area     @relation(fields: [areaId], references: [id])
  areaId    String
  Users     Users[]
}

model Sumdan {
  id             String  @id @default(uuid())
  name           String
  code           String  @unique
  logo           String
  maxInstallment Float   @default(95)
  rounded        Int     @default(100)
  skAkad         String? @db.Text

  sumdanType SumdanType @default(CHANNELLING)
  status     Boolean    @default(true)
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @default(now())
  Users      Users[]
  Produk     Produk[]
}

model Produk {
  id              String      @id @default(uuid())
  name            String
  minAge          Float
  maxAge          Float
  maxPaidAge      Float
  maxPlafon       Int
  maxTenor        Int
  marginSumdan    Float       @default(0)
  marginKoperasi  Float       @default(0)
  constInsurance  Float
  costAdmSumdan   Float
  costAdmKoperasi Float
  costGovernance  Int
  costStamp       Int
  costAccount     Int
  costProvision   Float
  jenisMargin     JenisMargin @default(ANUITAS)

  status          Boolean           @default(true)
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @default(now())
  Sumdan          Sumdan            @relation(fields: [sumdanId], references: [id])
  sumdanId        String
  DetailPengajuan DetailPengajuan[]
}

model Jenis {
  id         String @id @default(uuid())
  name       String
  costMutasi Int
  blokir     Int

  status          Boolean           @default(true)
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @default(now())
  DetailPengajuan DetailPengajuan[]
}

model Pengajuan {
  id           String           @id @default(uuid())
  nopen        String
  nik          String
  fullname     String
  verifStatus  StatusPengajuan?
  verifDesc    String?          @db.Text
  verifDate    DateTime?
  slikStatus   StatusPengajuan?
  slikDesc     String?          @db.Text
  slikDate     DateTime?
  approvStatus StatusPengajuan?
  approvDesc   String?          @db.Text
  approvDate   DateTime?

  transferStatus StatusPengajuan?
  transferDate   DateTime?

  status     StatusPengajuan @default(SIMULASI)
  statusPaid Boolean         @default(false)
  isActive   Boolean         @default(true)
  createdAt  DateTime        @default(now())
  updatedAt  DateTime        @default(now())
  User       Users           @relation(fields: [usersId], references: [id])
  usersId    String
  flagging   flagging?       @relation(fields: [flaggingId], references: [id])
  flaggingId Int?
}

model DetailPengajuan {
  id              String      @id @default(uuid())
  birthdate       DateTime
  oldSalary       Int
  newSalary       Int
  plafon          Int
  tenor           Int
  marginSumdan    Float
  marginKoperasi  Float
  constInsurance  Float
  costAdmSumdan   Float
  costAdmKoperasi Float
  costGovernance  Int
  costStamp       Int
  costAccount     Int
  costProvision   Float
  costMutasi      Int
  blokir          Int
  bpp             Int
  pelunasan       Int
  installment     Int         @default(0)
  rounded         Int
  jenisMargin     JenisMargin @default(ANUITAS)

  Produk   Produk  @relation(fields: [produkId], references: [id])
  Jenis    Jenis   @relation(fields: [jenisId], references: [id])
  User     Users?  @relation(fields: [usersId], references: [id])
  produkId String
  jenisId  String
  usersId  String?
}

model flagging {
  id                   Int         @id
  status_peserta       String?
  notas                String?
  kantor_cabang        String?
  alamat_cabang        String?
  nipnrp               String?
  nama_penerima        String?
  jandadudaypdari      String?
  alamatrumah          String?
  penerbitskep         String?
  noskep               String?
  jnsdapem             String?
  jnspens              String?
  ktrbaydapem          String?
  norek                String?
  stsdapem             String?
  tgllahir_penerima    String?
  tgllahir_jandadudayp String?
  nodosir              String?
  tglskep              String?
  tmtpens              String?
  nudapem              String?
  kdjiwa               Int?
  pangkat              String?
  tmt_stop             String?
  kdknsdapem           String?
  kdjnspens            String?
  kdktrbyrdapem        String?
  blthrincian          String?
  penpok               String?
  tistri               String?
  tanak                String?
  tpp                  String?
  tpmtp                String?
  tkd                  String?
  tdahor               String?
  tberas               String?
  tpph21               String?
  tcacat               String?
  pembulatan           String?
  jmlkotor             String?
  potpph21             String?
  potaskes             String?
  potassos             String?
  potkasda             String?
  potkpkn              String?
  potalimentasi        String?
  potsewarumah         String?
  potgantirugi         String?
  jmlpotongan          String?
  jmltotal             String?
  kpkn                 String?
  spn                  String?
  tgl_surat            String?
  tgl_sekarang         String?
  keluarga             String?     @db.Text
  jenishutang          String?
  jumlah_hutang        String?
  cicilan              String?
  awal_flagging        String?
  akhir_flagging       String?
  mitra_flagging       String?
  Pengajuan            Pengajuan[]
}
